@model CMS_Brian.Models.Admin.UserResponse.ClsClient
@using CMS_Brian.Models
@{

    ViewBag.Title = "AddClient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="/Content/Css/fineuploader-3.7.0.min.css" rel="stylesheet" type="text/css" />
<script src="/scripts/jquery.fineuploader-3.7.0.min.js" type="text/javascript"></script>

<script type="text/javascript">
        $(document).ready(function () {
            var count = 0;
            var manualuploader = new qq.FineUploader({
                element: $('#manual-fine-uploader')[0],
                action: '@Url.Action("/Home/upload")',
                type: "post",
                minSizeLimit: 0,
                autoUpload: true,
                text: {
                    uploadButton: '<i class="icon-plus icon-white"></i> Select Files'
                },
                validation: {
                    sizeLimit: 2000000 // 50 kB = 50 * 1024 bytes
                },
                callbacks: {
                    onComplete: function (id, filename, responseJSON) {
                        console.log(responseJSON);
                        if (responseJSON.success == true) {
                            var response_show = responseJSON.filename;
                            $("#SignForm").val(responseJSON.filename);

                        } else {
                            alert("Error: " + responseJSON.message);
                        }
                    }
                }
            });
        });
</script>

<header class="ribbon">
    <h2>&nbsp;</h2>
</header>

<div class="page-content">
    @{Html.RenderPartial("alerts");}

    <div class="row">
        <div class="col-md-12">
            <!--begin::Portlet-->
            <div class="kt-portlet">


                @using (Html.BeginForm())
                {
                    <div class="kt-portlet__head breadcrumb-sec">
                        <div class="kt-portlet__head-label">
                            <h4>
                                <a href="/Admin/Client" class="kt-menu__link ">
                                    <i class="kt-menu__link-icon flaticon-users"><span></span></i>
                                    <span class="kt-menu__link-text">Clients</span>
                                </a>
                                <span> > &nbsp; </span>
                            </h4>
                            @if (Model != null && Model.ClientId != null)
                            {
                                <h3 class="kt-portlet__head-bred">
                                    Edit Client
                                </h3>
                            }
                            else
                            {
                                <h3 class="kt-portlet__head-bred">
                                    Add Client
                                </h3>
                            }
                        </div>
                        <div class="kt-portlet__head-toolbar">
                            <div class="kt-portlet__head-wrapper">
                                <div class="kt-portlet__head-actions">
                                    <a href="/admin/Client" class="btn btn-brand btn-elevate btn-icon-sm">
                                        <i class="la la-step-backward"></i>
                                        Back
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="kt-form">
                        <div class="kt-portlet__body">
                            @Html.HiddenFor(model => model.ClientId)
                            <div class="row">
                                <div class="col-sm-12">
                                    <h2>Contact Information</h2>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>First Name <em>*</em></label>
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control required" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Last Name <em>*</em></label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control required" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Gender</label>
                                        <input type="hidden" id="iGender" value="@Model.Gender" />
                                        @Html.DropDownList("Gender", new List<SelectListItem>
    {
        new SelectListItem{ Text="Male", Value="Male"},
        new SelectListItem{ Text="Female", Value="Female"},
        new SelectListItem{ Text="Other", Value="Other"}
    }, "--- Select ---", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Status</label>
                                        <input type="hidden" id="iStatus" value="@Model.Status" />
                                        @Html.DropDownList("Status", new List<SelectListItem>
    {
        new SelectListItem{ Text=Constants.Active, Value=Constants.Active},
        new SelectListItem{ Text=Constants.Completed, Value=Constants.Completed},
        new SelectListItem{ Text=Constants.BalanceOwed, Value=Constants.BalanceOwed},
         new SelectListItem{ Text=Constants.Inactive, Value=Constants.Inactive}
    }, "--- Select ---", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Date Of Birth</label>
                                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control datepicker-txt" } })
                                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Phone Number </label>
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Address </label>
                                        @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Description </label>
                                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>

                            <div class="row">

                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Select Judge</label>
                                        @Html.DropDownListFor(model => model.JudgeId, new SelectList(ViewBag.JudgeList, "Value", "Text"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.JudgeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group ">
                                        <label>Upload SignForm</label>
                                        @Html.HiddenFor(model => model.SignForm)
                                        <div class="controls">
                                            <div id="manual-fine-uploader">
                                            </div>
                                            @Html.ValidationMessageFor(model => model.SignForm, "", new { @class = "text-danger" })
                                            <img id="blah" src="#" alt="" style="display:none" />
                                            @if (Model != null && !string.IsNullOrEmpty(Model.SignForm))
                                            {
                                                <img src="@Url.Content(Model.SignForm)" alt="" width="100px" height="100px" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="kt-portlet__foot">
                        <div class="kt-form__actions">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="reset" class="btn btn-secondary">Cancel</button>
                            @if (Model.ClientId > 0)
                            {
                                <a href="/Admin/AddClientsClass/?clientId=@Model.ClientId" class="btn btn-brand btn-elevate btn-icon-sm">
                                    <i class="la la-plus"></i>
                                    Assign Classes
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
            <!--end::Portlet-->
            @if (Model.ClientId > 0)
            {
                <div class="container-fluid">
                    @{Html.RenderPartial("alerts");}
                    <input type="hidden" id="PageView" value="ClientClassesPartialView/?ClientId=@Model.ClientId" />
                    <div id="main-content">
                    </div>
                </div>
            }

        </div>
    </div>

</div>
@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            common.bindDatepicker();

            // Select gender and status during edit based on database record
            var url = window.location.href;
            if (url.indexOf('edit') != -1) {
                // Load class partial view
                LoadPartial();
                var selectedGender = $.trim($('#iGender').val());
                $('select[name^="Gender"] option[value="' + selectedGender + '"]').attr("selected", "selected");
                var selectedStatus = $.trim($('#iStatus').val());
                $('select[name^="Status"] option[value="' + selectedStatus + '"]').attr("selected", "selected");
            }
            $('select[name ^= "Gender"]').on("change", function () {
                SetGender();
            });
            $('select[name ^= "Status"]').on("change", function () {
                SetStatus();
            });
        });
        function SetGender() {
            var gender = $('select[name ^= "Gender"] option:selected').val();
            $('#iGender').val(gender);
        }
        function SetStatus() {
            var status = $('select[name ^= "Status"] option:selected').val();
            $('#iStatus').val(status);
        }
        function LoadPartial() {
            var url = $("#PageView").val();
            console.log(url);
            admin.LoadAdminPartialView(url, "#main-content");
        }
    </script>
}





